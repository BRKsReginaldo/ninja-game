{"version":3,"sources":["assets/sprites/background.png","assets/sprites/tile.png","assets/sprites/dangertile.png","assets/sprites/title.png","assets/sprites/info.png","assets/sprites/playbutton.png","assets/sprites/clock.png","assets/sprites/energybar.png","assets/sprites/whitetile.png","assets/sprites/cloud.png","assets/sprites/hero.png","assets/sprites/icons.png","assets/fonts/font.png","assets/fonts/font.fnt","assets/sounds/death.mp3","assets/sounds/death.ogg","assets/sounds/run.mp3","assets/sounds/run.ogg","assets/sounds/stick.mp3","assets/sounds/stick.ogg","assets/sounds/grow.mp3","assets/sounds/grow.ogg","assets/sounds/pick.mp3","assets/sounds/pick.ogg","assets/sounds/click.mp3","assets/sounds/click.ogg","constants/index.js","scenes/Boot.js","services/preferences.js","sprites/Player.js","sprites/Star.js","sprites/Background.js","sprites/Cloud.js","sprites/Clouds.js","sprites/EnergyBar.js","sprites/EnergyStatus.js","managers/EnergyManager.js","sprites/Clock.js","sprites/Platform.js","managers/PlatformManager.js","sprites/Pole.js","managers/ScoreManager.js","managers/SoundManager.js","scenes/Main.js","scenes/Menu.js","index.js"],"names":["module","exports","ANIMATIONS","IDLE","RUN","SCENES","BOOT","MAIN","MENU","TEXTURES","BACKGROUND","CLOCK","CLOUD","DANGER_TILE","ENERGY_BAR","HERO","ICONS","INFO","PLAY_BUTTON","TILE","TITLE","WHITE_TILE","FONTS","SOUNDS","CLICK","DEATH","GROW","PICK","STICK","STORAGE","STATES","POLE_STATUS","DEFAULT_PREFERENCES","defaultSize","width","height","maxRatio","platformGapRange","platformWidthRange","scrollTime","platformHeight","dangerZoneWidth","poleWidth","poleGrowTime","poleRotateTime","heroWalkTime","heroFallTime","showGUI","bonusTime","initialTime","soundOn","Boot","Scene","constructor","super","key","preload","load","this","image","require","spritesheet","frameWidth","frameHeight","bitmapFont","audio","create","scene","start","preferences","getPreference","get","Player","GameObjects","Sprite","platformManager","pole","nextPlatform","onDie","soundManager","bounds","getMainPlatform","getBounds","right","top","add","existing","setOrigin","init","anims","frames","generateFrameNumbers","end","frameRate","repeat","play","walkThroughPole","poleStatus","tweens","platformBounds","getRightPlatform","heroBounds","poleBounds","heroDestination","playSound","walkTween","targets","x","duration","displayHeight","onComplete","stopSound","bind","fallAndDie","fallDown","onUpdate","centerX","left","y","goIddle","cameras","game","delay","config","angle","ease","main","shake","Physics","Arcade","Background","texture","frame","displayWidth","Cloud","Clouds","clouds","Math","ceil","cloudsArray","i","j","cloud","Phaser","Between","push","tweenClouds","cloudMovement","attribute","value","getEnd","target","props","yoyo","EnergyBar","EnergyStatus","EnergyManager","player","group","timeLeft","energyBar","energyBounds","energyStatus","removeTimer","gameTimer","remove","addGameTimer","time","addEvent","callback","updateTimer","loop","killTweensOf","addEnergy","actualTime","min","Clock","xHandler","0","1","yHandler","Platform","index","mainIndex","tween","PlatformManager","mainPlatform","platforms","addDangerZone","tweenPlatforms","rightBound","minGap","maxGap","destination","minWidth","maxWidth","placeDangerZone","dangerZone","sprite","visible","extraTime","rightPlatform","platformBound","alpha","hideDangerZone","rearangePlatforms","showExtraTimePick","timeTween","Pole","rearange","ScoreManager","energyManager","score","bestScore","Number","localStorage","getItem","scoreText","bitmapText","toString","bestScoreText","bottom","show","updateScore","setText","updateBestScore","setItem","increment","SoundManager","item","console","log","sounds","Object","values","forEach","soundKey","sound","toggleSoundOn","options","stop","Main","firstMove","ui","background","showGameOver","cloudsManager","addInfo","state","input","on","handlePointerDown","handlePointerUp","platformGap","maxPoleWidth","growTween","info","scoreManager","dangerBounds","rightPlatformPosition","distance","prepareNextMove","halfGameWidth","buttonsY","restartIcon","homeIcon","setFrame","setInteractive","update","Menu","playButtonX","playButtonY","playButton","flash","soundButton","setSoundSprite","window","addEventListener","perfectRatio","innerWidth","innerHeight","actualRatio","title","url","process","version","disableContextMenu","backgroundColor","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","parent","Game","focus"],"mappings":"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","file":"static/js/main.ec60e626.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.abe089e8.png\";","module.exports = __webpack_public_path__ + \"static/media/tile.c9514dd3.png\";","module.exports = __webpack_public_path__ + \"static/media/dangertile.95534270.png\";","module.exports = __webpack_public_path__ + \"static/media/title.37e7f2b3.png\";","module.exports = __webpack_public_path__ + \"static/media/info.3d93ece3.png\";","module.exports = __webpack_public_path__ + \"static/media/playbutton.20b82413.png\";","module.exports = __webpack_public_path__ + \"static/media/clock.7066785b.png\";","module.exports = __webpack_public_path__ + \"static/media/energybar.3e4fcd2c.png\";","module.exports = __webpack_public_path__ + \"static/media/whitetile.f6f948be.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud.b3008311.png\";","module.exports = __webpack_public_path__ + \"static/media/hero.31ab953b.png\";","module.exports = __webpack_public_path__ + \"static/media/icons.a6491443.png\";","module.exports = __webpack_public_path__ + \"static/media/font.b8d1bfa9.png\";","module.exports = __webpack_public_path__ + \"static/media/font.4d6c771c.fnt\";","module.exports = __webpack_public_path__ + \"static/media/death.61ed9858.mp3\";","module.exports = __webpack_public_path__ + \"static/media/death.21dc985c.ogg\";","module.exports = __webpack_public_path__ + \"static/media/run.79a85315.mp3\";","module.exports = __webpack_public_path__ + \"static/media/run.e969c463.ogg\";","module.exports = __webpack_public_path__ + \"static/media/stick.42a31551.mp3\";","module.exports = __webpack_public_path__ + \"static/media/stick.41b72b88.ogg\";","module.exports = __webpack_public_path__ + \"static/media/grow.69df2205.mp3\";","module.exports = __webpack_public_path__ + \"static/media/grow.e21a5ce0.ogg\";","module.exports = __webpack_public_path__ + \"static/media/pick.40fdd5dd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pick.21a49f79.ogg\";","module.exports = __webpack_public_path__ + \"static/media/click.df32ce99.mp3\";","module.exports = __webpack_public_path__ + \"static/media/click.9aade6d7.ogg\";","export const ANIMATIONS = {\n  IDLE: '@ANIMATIONS/IDLE',\n  RUN: '@ANIMATIONS/RUN',\n};\n\nexport const SCENES = {\n  BOOT: '@SCENES/BOOT',\n  MAIN: '@SCENES/MAIN',\n  MENU: '@SCENES/MENU',\n};\n\nexport const TEXTURES = {\n  BACKGROUND: '@TEXTURES/BACKGROUND',\n  CLOCK: '@TEXTURES/CLOCK',\n  CLOUD: '@TEXTURES/CLOUD',\n  DANGER_TILE: '@TEXTURES/DANGER_TILE',\n  ENERGY_BAR: '@TEXTURES/ENERGY_BAR',\n  HERO: '@TEXTURES/HERO',\n  ICONS: '@TEXTURES/ICONS',\n  INFO: '@TEXTURES/INFO',\n  PLAY_BUTTON: '@TEXTURES/PLAY_BUTTON',\n  TILE: '@TEXTURES/TILE',\n  TITLE: '@TEXTURES/TITLE',\n  WHITE_TILE: '@TEXTURES/WHITE_TILE',\n};\n\nexport const FONTS = {\n  MAIN_FONT: '@FONTS/MAIN_FONT',\n};\n\nexport const SOUNDS = {\n  CLICK: '@SOUNDS/CLICK',\n  DEATH: '@SOUNDS/DEATH',\n  GROW: '@SOUNDS/GROW',\n  PICK: '@SOUNDS/PICK',\n  RUN: '@SOUNDS/RUN',\n  STICK: '@SOUNDS/STICK',\n};\n\nexport const STORAGE = {\n  SCORE: '@irresponsible/score',\n  PREFERENCES: '@irresponsible/preferences',\n  SOUND_ON: '@irresponsible/soundOn',\n};\n\nexport const STATES = {\n  IDDLE: '@STATES/IDDLE',\n  WAITING_FOR_INPUT: '@STATES/WAITING_FOR_INPUT',\n  WAITING_FOR_INPUT_END: '@STATES/WAITING_FOR_INPUT_END',\n};\n\nexport const POLE_STATUS = {\n  SUCCESSFUL: '@POLE_STATUS/SUCCESSFUL',\n  TOO_SHORT: '@POLE_STATUS/TOO_SHORT',\n  TOO_LONG: '@POLE_STATUS/TOO_LONG',\n};\n\nexport const DEFAULT_PREFERENCES = {\n  defaultSize: {\n    width: 750,\n    height: 1334,\n    maxRatio: 4 / 3,\n  },\n  platformGapRange: [50, 150],\n  platformWidthRange: [50, 150],\n  scrollTime: 250,\n  platformHeight: 0.6,\n  dangerZoneWidth: 30,\n  poleWidth: 8,\n  poleGrowTime: 400,\n  poleRotateTime: 500,\n  heroWalkTime: 2,\n  heroFallTime: 500,\n  showGUI: true,\n  bonusTime: 3,\n  initialTime: 30,\n  soundOn: true,\n};\n\nexport default {\n  ANIMATIONS,\n  SCENES,\n  TEXTURES,\n};\n","import { FONTS, SCENES, SOUNDS, TEXTURES } from '../constants';\nimport { Scene } from 'phaser';\n\nexport default class Boot extends Scene {\n  constructor() {\n    super({ key: SCENES.BOOT });\n  }\n\n  preload() {\n    const { load } = this;\n    load.image(TEXTURES.BACKGROUND, require('../assets/sprites/background.png'));\n    load.image(TEXTURES.TILE, require('../assets/sprites/tile.png'));\n    load.image(TEXTURES.DANGER_TILE, require('../assets/sprites/dangertile.png'));\n    load.image(TEXTURES.TITLE, require('../assets/sprites/title.png'));\n    load.image(TEXTURES.INFO, require('../assets/sprites/info.png'));\n    load.image(TEXTURES.PLAY_BUTTON, require('../assets/sprites/playbutton.png'));\n    load.image(TEXTURES.CLOCK, require('../assets/sprites/clock.png'));\n    load.image(TEXTURES.ENERGY_BAR, require('../assets/sprites/energybar.png'));\n    load.image(TEXTURES.WHITE_TILE, require('../assets/sprites/whitetile.png'));\n\n    load.spritesheet(TEXTURES.CLOUD, require('../assets/sprites/cloud.png'), {\n      frameWidth: 256,\n      frameHeight: 256,\n    });\n    load.spritesheet(TEXTURES.HERO, require('../assets/sprites/hero.png'), {\n      frameWidth: 77,\n      frameHeight: 97,\n    });\n    load.spritesheet(TEXTURES.ICONS, require('../assets/sprites/icons.png'), {\n      frameWidth: 150,\n      frameHeight: 150,\n    });\n\n    load.bitmapFont(\n      FONTS.MAIN_FONT,\n      require('../assets/fonts/font.png'),\n      require('../assets/fonts/font.fnt')\n    );\n\n    load.audio(SOUNDS.DEATH, [\n      require('../assets/sounds/death.mp3'),\n      require('../assets/sounds/death.ogg'),\n    ]);\n    load.audio(SOUNDS.RUN, [\n      require('../assets/sounds/run.mp3'),\n      require('../assets/sounds/run.ogg'),\n    ]);\n    load.audio(SOUNDS.STICK, [\n      require('../assets/sounds/stick.mp3'),\n      require('../assets/sounds/stick.ogg'),\n    ]);\n    load.audio(SOUNDS.GROW, [\n      require('../assets/sounds/grow.mp3'),\n      require('../assets/sounds/grow.ogg'),\n    ]);\n    load.audio(SOUNDS.PICK, [\n      require('../assets/sounds/pick.mp3'),\n      require('../assets/sounds/pick.ogg'),\n    ]);\n    load.audio(SOUNDS.CLICK, [\n      require('../assets/sounds/click.mp3'),\n      require('../assets/sounds/click.ogg'),\n    ]);\n  }\n\n  create() {\n    this.scene.start(SCENES.MENU);\n  }\n}\n","import { get, set } from 'lodash';\nimport { DEFAULT_PREFERENCES } from '../constants';\n\nlet preferences;\n\nexport const getPreference = key => {\n  if (!preferences) {\n    // const storedPreferences = localStorage.getItem(STORAGE.PREFERENCES);\n    // preferences = storedPreferences\n    //   ? JSON.parse(storedPreferences)\n    //   : DEFAULT_PREFERENCES;\n    preferences = DEFAULT_PREFERENCES;\n  }\n\n  return get(preferences, key);\n};\n\nexport const setPreference = (key, value) => {\n  getPreference('dummy'); // just to set the preferences object if not yet done\n\n  set(preferences, key, value);\n\n  // localStorage.setItem(STORAGE.PREFERENCES, JSON.stringify(preferences));\n};\n","import { ANIMATIONS, POLE_STATUS, SOUNDS, TEXTURES } from '../constants';\nimport { GameObjects } from 'phaser';\nimport { getPreference } from '../services/preferences';\n\nexport default class Player extends GameObjects.Sprite {\n  constructor({ scene, platformManager, pole, nextPlatform, onDie, soundManager }) {\n    let bounds = platformManager.getMainPlatform().getBounds();\n    let x = bounds.right - getPreference('poleWidth');\n    let y = bounds.top;\n\n    super(scene, x, y, TEXTURES.HERO);\n\n    scene.add.existing(this);\n    this.onDie = onDie;\n    this.setOrigin(1, 1);\n    this.platformManager = platformManager;\n    this.pole = pole;\n    this.nextPlatform = nextPlatform;\n    this.soundManager = soundManager;\n  }\n\n  init() {\n    const { anims } = this.scene;\n\n    anims.create({\n      key: ANIMATIONS.IDLE,\n      frames: anims.generateFrameNumbers(TEXTURES.HERO, {\n        start: 0,\n        end: 11,\n      }),\n      frameRate: 15,\n      repeat: -1,\n    });\n\n    anims.create({\n      key: ANIMATIONS.RUN,\n      frames: anims.generateFrameNumbers(TEXTURES.HERO, {\n        start: 12,\n        end: 19,\n      }),\n      frameRate: 15,\n      repeat: -1,\n    });\n\n    this.anims.play(ANIMATIONS.IDLE);\n\n    return this;\n  }\n\n  walkThroughPole(poleStatus) {\n    const { tweens } = this.scene;\n    const { soundManager } = this;\n    let platformBounds = this.platformManager.getRightPlatform().getBounds();\n    let heroBounds = this.getBounds();\n    let poleBounds = this.pole.getBounds();\n\n    let heroDestination = {\n      [POLE_STATUS.SUCCESSFUL]: () => platformBounds.right - getPreference('poleWidth'),\n      [POLE_STATUS.TOO_SHORT]: () => poleBounds.right,\n      [POLE_STATUS.TOO_LONG]: () => poleBounds.right + heroBounds.width / 2,\n    }[poleStatus]();\n\n    this.anims.play(ANIMATIONS.RUN);\n    soundManager.playSound(SOUNDS.RUN);\n\n    this.walkTween = tweens.add({\n      targets: [this],\n      x: heroDestination,\n      duration: getPreference('heroWalkTime') * this.pole.displayHeight,\n      onComplete: () => {\n        soundManager.stopSound(SOUNDS.RUN);\n\n        const decisions = {\n          [POLE_STATUS.SUCCESSFUL]: this.nextPlatform.bind(this.scene),\n          [POLE_STATUS.TOO_LONG]: () => this.fallAndDie(),\n          [POLE_STATUS.TOO_SHORT]: () => {\n            this.pole.fallDown();\n            this.fallAndDie();\n          },\n        };\n\n        decisions[poleStatus]();\n      },\n      onUpdate: () => {\n        let heroBounds = this.getBounds();\n        let poleBounds = this.pole.getBounds();\n        let platformBounds = this.platformManager.getRightPlatform().getBounds();\n\n        if (heroBounds.centerX > poleBounds.left && heroBounds.centerX < poleBounds.right) {\n          this.y = poleBounds.top;\n        } else {\n          this.y = platformBounds.top;\n        }\n      },\n    });\n  }\n\n  goIddle() {\n    this.anims.play(ANIMATIONS.IDLE);\n  }\n\n  fallAndDie() {\n    const { cameras, tweens, game } = this.scene;\n    this.soundManager.playSound(SOUNDS.DEATH, {\n      delay: getPreference('heroFallTime') / 2000,\n    });\n\n    tweens.add({\n      targets: [this],\n      y: game.config.height + this.displayHeight * 2,\n      angle: 180,\n      duration: getPreference('heroFallTime'),\n      ease: 'Cubic.easeIn',\n      onComplete: () => {\n        cameras.main.shake(200, 0.01);\n        this.onDie();\n      },\n    });\n  }\n}\n","import { Math, Physics } from 'phaser';\nimport { TEXTURES } from '../constants';\n\nexport default class Star extends Physics.Arcade.Sprite {\n  constructor(scene, x, y, texture, frame) {\n    super(scene, x, y, TEXTURES.STAR);\n\n    // Reset drawing position of image to the top-left.\n    this.setOrigin(0);\n  }\n\n  init() {\n    // Give the sprite some bounce.\n    this.body.setBounceY(Math.FloatBetween(0.4, 0.8));\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\n\nexport default class Background extends GameObjects.Sprite {\n  constructor(scene, x, y, texture, frame) {\n    super(scene, x, y, texture || TEXTURES.BACKGROUND, frame);\n\n    scene.add.existing(this);\n  }\n\n  init() {\n    const { game } = this.scene;\n\n    this.displayWidth = game.config.width + 100;\n    this.displayHeight = game.config.height + 100;\n    this.setOrigin(0, 0);\n\n    return this;\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\n\nexport default class Cloud extends GameObjects.Sprite {\n  constructor(scene, x, y, texture, frame) {\n    super(scene, x, y, texture || TEXTURES.CLOUD, frame);\n\n    scene.add.existing(this);\n  }\n\n  init() {\n    return this;\n  }\n}\n","import Cloud from './Cloud';\nimport Phaser from 'phaser';\n\nexport default class Clouds {\n  constructor(scene) {\n    this.scene = scene;\n  }\n\n  init() {\n    const { game } = this.scene;\n    let clouds = Math.ceil(game.config.width / 128);\n    let cloudsArray = [];\n\n    for (let i = 0; i <= 1; i++) {\n      for (let j = 0; j < clouds; j++) {\n        let cloud = new Cloud(\n          this.scene,\n          128 * j + Phaser.Math.Between(-10, 10),\n          game.config.height + i * 32 + Phaser.Math.Between(-10, 10),\n          null,\n          i\n        );\n\n        cloudsArray.push(cloud);\n      }\n    }\n\n    this.clouds = cloudsArray;\n    this.tweenClouds();\n  }\n\n  tweenClouds() {\n    const { tweens } = this.scene;\n\n    const cloudMovement = attribute => ({\n      [attribute]: {\n        value: {\n          getEnd: target => target[attribute] + Phaser.Math.Between(-10, 10),\n        },\n      },\n    });\n\n    tweens.add({\n      targets: this.clouds,\n      props: {\n        ...cloudMovement('x'),\n        ...cloudMovement('y'),\n      },\n      duration: 3000,\n      repeat: -1,\n      yoyo: true,\n    });\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\n\nexport default class EnergyBar extends GameObjects.Sprite {\n  constructor({ scene }) {\n    super(scene, scene.game.config.width / 2, scene.game.config.height / 5, TEXTURES.ENERGY_BAR);\n\n    scene.add.existing(this);\n  }\n\n  init() {\n    return this;\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\n\nexport default class EnergyStatus extends GameObjects.Sprite {\n  constructor({ scene, x, y }) {\n    super(scene, x, y, TEXTURES.WHITE_TILE);\n\n    scene.add.existing(this);\n  }\n\n  init() {\n    return this;\n  }\n}\n","import { getPreference } from '../services/preferences';\nimport EnergyBar from '../sprites/EnergyBar';\nimport EnergyStatus from '../sprites/EnergyStatus';\n\nexport default class EnergyManager {\n  constructor({ scene, platformManager, player, pole, group }) {\n    this.scene = scene;\n    this.platformManager = platformManager;\n    this.player = player;\n    this.pole = pole;\n    this.group = group;\n  }\n\n  init() {\n    this.timeLeft = getPreference('initialTime');\n    this.energyBar = new EnergyBar({ scene: this.scene }).init();\n    this.group.add(this.energyBar);\n\n    const energyBounds = this.energyBar.getBounds();\n\n    this.energyStatus = new EnergyStatus({\n      scene: this.scene,\n      x: energyBounds.left + 5,\n      y: energyBounds.top + 5,\n    }).init();\n    this.group.add(this.energyStatus);\n    this.energyStatus.setOrigin(0, 0);\n    this.energyStatus.displayWidth = 500;\n    this.energyStatus.displayHeight = energyBounds.height - 10;\n\n    return this;\n  }\n\n  removeTimer() {\n    this.gameTimer.remove();\n  }\n\n  addGameTimer() {\n    this.gameTimer = this.scene.time.addEvent({\n      delay: 1000,\n      callback: () => {\n        this.timeLeft--;\n        this.updateTimer();\n      },\n      loop: true,\n    });\n  }\n\n  updateTimer() {\n    const { tweens } = this.scene;\n    this.energyStatus.displayWidth = (500 * this.timeLeft) / getPreference('initialTime');\n\n    if (this.timeLeft <= 0) {\n      tweens.killTweensOf(this.player);\n      tweens.killTweensOf(this.pole);\n      this.player.fallAndDie();\n    }\n  }\n\n  addEnergy() {\n    let actualTime = this.timeLeft + getPreference('initialTime');\n    this.timeLeft = Math.min(actualTime, getPreference('initialTime'));\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\n\nexport default class Clock extends GameObjects.Sprite {\n  constructor(scene, x, y) {\n    super(scene, x, y, TEXTURES.CLOCK);\n\n    scene.add.existing(this);\n  }\n\n  init() {\n    return this;\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\nimport { getPreference } from '../services/preferences';\n\nconst xHandler = {\n  0: ({ game }) => (game.config.width - getPreference('defaultSize.width')) / 2,\n  1: ({ game }) => game.config.width,\n};\n\nconst yHandler = {\n  default: ({ game }) => game.config.height * getPreference('platformHeight'),\n};\n\nexport default class Platform extends GameObjects.Sprite {\n  constructor(index, mainIndex, scene) {\n    let x = xHandler[index]({ game: scene.game });\n    let y = yHandler.default({ game: scene.game });\n\n    super(scene, x, y, TEXTURES.TILE);\n\n    this.index = index;\n    this.mainIndex = mainIndex;\n\n    scene.add.existing(this);\n  }\n\n  init() {\n    const { game } = this.scene;\n\n    this.displayWidth =\n      (getPreference('platformWidthRange[0]') + getPreference('platformWidthRange[1]')) / 2;\n\n    this.displayHeight = game.config.height * (1 - getPreference('platformHeight')) + 50;\n\n    this.setOrigin(0, 0);\n\n    return this;\n  }\n\n  tween() {}\n}\n","import Clock from '../sprites/Clock';\nimport { getPreference } from '../services/preferences';\nimport Phaser from 'phaser';\nimport Platform from '../sprites/Platform';\nimport { TEXTURES } from '../constants';\n\nexport default class PlatformManager {\n  constructor(scene) {\n    this.scene = scene;\n    this.mainPlatform = 0;\n    this.platforms = [\n      new Platform(0, this.mainPlatform, scene).init(),\n      new Platform(1, this.mainPlatform, scene).init(),\n    ];\n  }\n\n  init() {\n    this.addDangerZone();\n    this.tweenPlatforms();\n\n    return this;\n  }\n\n  getMainPlatform() {\n    return this.platforms[this.mainPlatform];\n  }\n\n  getRightPlatform() {\n    return this.platforms[1 - this.mainPlatform];\n  }\n\n  tweenPlatforms() {\n    const { tweens } = this.scene;\n\n    let rightBound = this.getMainPlatform().getBounds().right;\n\n    let [minGap, maxGap] = getPreference('platformGapRange');\n    let gap = Phaser.Math.Between(minGap, maxGap);\n\n    let destination = rightBound + gap;\n\n    let [minWidth, maxWidth] = getPreference('platformWidthRange');\n    let width = Phaser.Math.Between(minWidth, maxWidth);\n\n    this.getRightPlatform().displayWidth = width;\n\n    tweens.add({\n      targets: [this.getRightPlatform()],\n      x: destination,\n      duration: getPreference('scrollTime'),\n      onComplete: () => this.placeDangerZone(),\n    });\n  }\n\n  addDangerZone() {\n    const { scene } = this;\n    let dangerZone = scene.add.sprite(0, this.getMainPlatform().y, TEXTURES.DANGER_TILE);\n    this.dangerZone = dangerZone;\n    dangerZone.setOrigin(0, 0);\n    dangerZone.displayWidth = getPreference('dangerZoneWidth');\n    dangerZone.displayHeight = 10;\n    dangerZone.visible = false;\n\n    this.extraTime = new Clock(scene, 0, 0);\n    this.extraTime.visible = false;\n  }\n\n  placeDangerZone() {\n    let dangerZone = this.dangerZone;\n    dangerZone.visible = true;\n    let rightPlatform = this.getRightPlatform();\n    let platformBound = rightPlatform.getBounds().right;\n\n    if (Phaser.Math.Between(0, 1) === 0) {\n      dangerZone.x = rightPlatform.x;\n    } else {\n      dangerZone.x = platformBound - getPreference('dangerZoneWidth');\n    }\n\n    this.extraTime.x = dangerZone.getBounds().centerX;\n    this.extraTime.alpha = 1;\n    this.extraTime.y = this.getMainPlatform().y - 30;\n    this.extraTime.visible = false;\n  }\n\n  hideDangerZone() {\n    this.dangerZone.visible = false;\n  }\n\n  rearangePlatforms() {\n    const mainPlatform = this.getMainPlatform();\n    mainPlatform.x = this.scene.game.config.width;\n    mainPlatform.alpha = 1;\n    this.mainPlatform = 1 - this.mainPlatform;\n    this.tweenPlatforms();\n  }\n\n  showExtraTimePick() {\n    this.extraTime.visible = true;\n    this.timeTween = this.scene.tweens.add({\n      targets: [this.extraTime],\n      y: this.extraTime.y - 100,\n      alpha: 0,\n      duration: 500,\n    });\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { TEXTURES } from '../constants';\nimport { getPreference } from '../services/preferences';\n\nexport default class Pole extends GameObjects.Sprite {\n  constructor(scene, platformManager) {\n    const bounds = platformManager.getMainPlatform().getBounds();\n    const x = bounds.right - getPreference('poleWidth');\n    const y = bounds.top;\n\n    super(scene, x, y, TEXTURES.TILE);\n\n    scene.add.existing(this);\n    this.platformManager = platformManager;\n  }\n\n  init() {\n    this.setOrigin(1, 1);\n\n    this.displayWidth = getPreference('poleWidth');\n    this.displayHeight = getPreference('poleWidth');\n\n    return this;\n  }\n\n  fallDown() {\n    const { tweens } = this.scene;\n\n    tweens.add({\n      targets: [this],\n      angle: 180,\n      duration: getPreference('poleRotateTime'),\n      ease: 'Cubic.easeIn',\n    });\n  }\n\n  rearange() {\n    this.angle = 1;\n    this.alpha = 1;\n    this.x = this.platformManager.getMainPlatform().getBounds().right - getPreference('poleWidth');\n    this.displayHeight = getPreference('poleWidth');\n  }\n}\n","import { FONTS, STORAGE } from '../constants';\n\nexport default class ScoreManager {\n  constructor({ scene, platformManager, energyManager, group }) {\n    this.scene = scene;\n    this.platformManager = platformManager;\n    this.energyManager = energyManager;\n    this.group = group;\n  }\n\n  init() {\n    this.score = 0;\n    this.bestScore = Number(localStorage.getItem(STORAGE.SCORE)) || 0;\n    const energyBounds = this.energyManager.energyBar.getBounds();\n\n    this.scoreText = this.scene.add.bitmapText(\n      energyBounds.right,\n      energyBounds.top - 40,\n      FONTS.MAIN_FONT,\n      `DISTANCIA: ${this.score.toString()}`\n    );\n    this.group.add(this.scoreText);\n    this.scoreText.setOrigin(1, 0);\n\n    this.bestScoreText = this.scene.add.bitmapText(\n      energyBounds.left,\n      energyBounds.bottom + 10,\n      FONTS.MAIN_FONT,\n      `DISTANCIA MAXIMA: ${this.bestScore.toString()}`\n    );\n    this.group.add(this.bestScoreText);\n    this.bestScoreText.setOrigin(0, 0);\n\n    return this;\n  }\n\n  show() {}\n\n  updateScore() {\n    this.scoreText.setText(`DISTANCIA: ${this.score.toString()}`);\n  }\n\n  updateBestScore() {\n    if (this.score > this.bestScore) {\n      this.bestScore = this.score;\n      this.bestScoreText.setText(`DISTANCIA MAXIMA: ${this.bestScore.toString()}`);\n      localStorage.setItem(STORAGE.SCORE, this.bestScore);\n    }\n  }\n\n  increment() {\n    this.score += 1;\n    this.updateScore();\n    this.updateBestScore();\n  }\n}\n","import { SOUNDS, STORAGE } from '../constants';\n\nexport default class SoundManager {\n  constructor(scene) {\n    this.scene = scene;\n    let item = localStorage.getItem(STORAGE.SOUND_ON);\n    this.soundOn = item ? Number(item) : 1;\n\n    console.log(this.soundOn, item);\n  }\n\n  init() {\n    const { scene } = this;\n\n    this.sounds = {};\n\n    Object.values(SOUNDS).forEach(soundKey => {\n      this.sounds[soundKey] = scene.sound.add(soundKey);\n    });\n\n    return this;\n  }\n\n  toggleSoundOn() {\n    this.soundOn = this.soundOn === 1 ? 0 : 1;\n    localStorage.setItem(STORAGE.SOUND_ON, this.soundOn);\n  }\n\n  playSound(soundKey, options) {\n    if (this.soundOn) {\n      const sound = this.sounds[soundKey];\n      sound.play('', options);\n    }\n  }\n\n  stopSound(soundKey) {\n    const sound = this.sounds[soundKey];\n    sound.stop();\n  }\n}\n","import { FONTS, POLE_STATUS, SCENES, SOUNDS, STATES, TEXTURES } from '../constants';\nimport { Player } from '../sprites';\nimport { Scene } from 'phaser';\nimport { getPreference } from '../services/preferences';\nimport Background from '../sprites/Background';\nimport Clouds from '../sprites/Clouds';\nimport EnergyManager from '../managers/EnergyManager';\nimport PlatformManager from '../managers/PlatformManager';\nimport Pole from '../sprites/Pole';\nimport ScoreManager from '../managers/ScoreManager';\nimport SoundManager from '../managers/SoundManager';\n\nexport default class Main extends Scene {\n  constructor() {\n    super({\n      key: SCENES.MAIN,\n    });\n  }\n\n  create() {\n    this.firstMove = true;\n\n    this.ui = this.add.group();\n\n    this.background = new Background(this, -50, -50).init();\n\n    this.mainPlatform = 0;\n\n    this.platformManager = new PlatformManager(this).init();\n\n    this.pole = new Pole(this, this.platformManager).init();\n\n    this.soundManager = new SoundManager(this).init();\n\n    this.player = new Player({\n      scene: this,\n      platformManager: this.platformManager,\n      pole: this.pole,\n      nextPlatform: this.nextPlatform,\n      soundManager: this.soundManager,\n      onDie: () => this.showGameOver(),\n    }).init();\n\n    this.cloudsManager = new Clouds(this).init();\n\n    this.addInfo();\n\n    this.state = STATES.WAITING_FOR_INPUT;\n\n    this.input.on('pointerdown', this.handlePointerDown, this);\n    this.input.on('pointerup', this.handlePointerUp, this);\n  }\n\n  handlePointerDown() {\n    if (this.state === STATES.WAITING_FOR_INPUT) {\n      this.state = STATES.WAITING_FOR_INPUT_END;\n      let platformGap = getPreference('platformGapRange[1]');\n      let maxPoleWidth = platformGap + platformGap;\n\n      this.soundManager.playSound(SOUNDS.GROW);\n\n      this.growTween = this.tweens.add({\n        targets: [this.pole],\n        displayHeight: maxPoleWidth + 50,\n        duration: getPreference('poleGrowTime'),\n        onComplete: () => this.soundManager.stopSound(SOUNDS.GROW),\n      });\n\n      if (this.firstMove) {\n        this.firstMove = false;\n        this.info.visible = false;\n\n        this.energyManager = new EnergyManager({\n          scene: this,\n          platformManager: this,\n          player: this.player,\n          pole: this.pole,\n          group: this.ui,\n        }).init();\n\n        this.energyManager.addGameTimer();\n\n        this.scoreManager = new ScoreManager({\n          scene: this,\n          platformManager: this.platformManager,\n          energyManager: this.energyManager,\n          group: this.ui,\n        }).init();\n      }\n    }\n  }\n\n  handlePointerUp() {\n    if (this.state === STATES.WAITING_FOR_INPUT_END) {\n      this.state = STATES.IDDLE;\n\n      let soundManager = this.soundManager;\n      soundManager.stopSound(SOUNDS.GROW);\n      soundManager.playSound(SOUNDS.STICK);\n\n      this.growTween.stop();\n\n      this.tweens.add({\n        targets: [this.pole],\n        angle: 90,\n        duration: getPreference('poleRotateTime'),\n        ease: 'Bounce.easeOut',\n        onComplete: () => {\n          let poleBounds = this.pole.getBounds();\n          let platformBounds = this.platformManager.getRightPlatform().getBounds();\n          let dangerBounds = this.platformManager.dangerZone.getBounds();\n\n          // If we hit the danger zone\n          if (poleBounds.right >= dangerBounds.left && poleBounds.right <= dangerBounds.right) {\n            soundManager.playSound(SOUNDS.PICK);\n            this.platformManager.showExtraTimePick();\n            this.energyManager.addEnergy();\n          }\n\n          let poleStatus = POLE_STATUS.SUCCESSFUL;\n\n          if (poleBounds.right < platformBounds.left) {\n            poleStatus = POLE_STATUS.TOO_SHORT;\n          } else if (poleBounds.right > platformBounds.right) {\n            poleStatus = POLE_STATUS.TOO_LONG;\n          }\n\n          this.player.walkThroughPole(poleStatus);\n        },\n      });\n    }\n  }\n\n  nextPlatform() {\n    this.player.goIddle();\n    let mainPlatform = this.platformManager.getMainPlatform();\n    this.player.y = mainPlatform.getBounds().top;\n    this.platformManager.hideDangerZone();\n    let rightPlatform = this.platformManager.getRightPlatform();\n    let rightPlatformPosition = rightPlatform.x;\n    let distance = rightPlatform.x - mainPlatform.x;\n\n    this.tweens.add({\n      targets: [this.player, this.pole, mainPlatform, rightPlatform],\n      props: {\n        x: {\n          value: `-= ${distance}`,\n        },\n        alpha: {\n          value: {\n            getEnd: target => (target.x < rightPlatformPosition ? 0 : 1),\n          },\n        },\n      },\n      duration: getPreference('scrollTime'),\n      onComplete: () => this.prepareNextMove(),\n    });\n  }\n\n  prepareNextMove() {\n    this.scoreManager.increment();\n    this.platformManager.rearangePlatforms();\n    this.pole.rearange();\n\n    this.state = STATES.WAITING_FOR_INPUT;\n  }\n\n  addInfo() {\n    let info = this.add.bitmapText(\n      this.game.config.width / 2,\n      this.game.config.height / 5,\n      FONTS.MAIN_FONT,\n      `SEGURE O DEDO/BOTAO DO MOUSE NA TELA\\nPARA ALONGAR O PALITO\\nE CHEGAR A PROXIMA PLATAFORMA`,\n      35,\n      1\n    );\n    this.info = info;\n    info.setOrigin(0.5, 0.5);\n  }\n\n  showGameOver() {\n    this.energyManager.removeTimer();\n    let halfGameWidth = this.game.config.width / 2;\n    let buttonsY = this.game.config.height + 150;\n    let restartIcon = this.add.sprite(halfGameWidth - 120, buttonsY, TEXTURES.ICONS);\n\n    let homeIcon = this.add.sprite(halfGameWidth + 120, buttonsY, TEXTURES.ICONS);\n\n    homeIcon.setFrame(1);\n\n    this.tweens.add({\n      targets: [\n        this.platformManager.dangerZone,\n        this.pole,\n        this.platformManager.getMainPlatform(),\n        this.platformManager.getRightPlatform(),\n      ],\n      alpha: 0,\n      duration: 800,\n      ease: 'Cubic.easeIn',\n    });\n\n    this.tweens.add({\n      targets: [homeIcon, restartIcon],\n      y: this.game.config.height / 2,\n      duration: 800,\n      ease: 'Cubic.easeIn',\n      onComplete: () => {\n        restartIcon.setInteractive();\n        restartIcon.on('pointerup', () => {\n          this.soundManager.playSound(SOUNDS.CLICK);\n          this.scene.start(SCENES.MAIN);\n        });\n\n        homeIcon.setInteractive();\n        homeIcon.on('pointerup', () => {\n          this.soundManager.playSound(SOUNDS.CLICK);\n          this.scene.start(SCENES.MENU);\n        });\n      },\n    });\n  }\n\n  update() {}\n}\n","import { SCENES, SOUNDS, TEXTURES } from '../constants';\nimport { Scene } from 'phaser';\nimport SoundManager from '../managers/SoundManager';\n\nexport default class Menu extends Scene {\n  constructor() {\n    super({\n      key: SCENES.MENU,\n    });\n  }\n\n  create() {\n    let soundManager = new SoundManager(this).init();\n    let background = this.add.sprite(0, 0, TEXTURES.TILE);\n    background.setOrigin(0, 0);\n    let game = this.game;\n    let config = game.config;\n    background.displayWidth = config.width;\n    background.displayHeight = config.height;\n\n    let title = this.add.sprite(config.width / 2, 50, TEXTURES.TITLE);\n    title.setOrigin(0.5, 0);\n\n    let playButtonX = config.width / 2;\n    let playButtonY = config.height / 2 - 20;\n    let playButton = this.add.sprite(playButtonX, playButtonY, TEXTURES.PLAY_BUTTON);\n\n    playButton.setInteractive();\n\n    playButton.on('pointerup', () => {\n      this.cameras.main.flash();\n      soundManager.playSound(SOUNDS.CLICK);\n      this.scene.start(SCENES.MAIN);\n    });\n\n    let soundButton = this.add.sprite(playButtonX, playButtonY + 400, TEXTURES.ICONS);\n\n    const setSoundSprite = () => soundButton.setFrame(soundManager.soundOn ? 2 : 3);\n    setSoundSprite();\n\n    soundButton.setInteractive();\n\n    soundButton.on('pointerup', () => {\n      soundManager.toggleSoundOn();\n      setSoundSprite();\n    });\n  }\n}\n","import './index.css';\nimport { Boot, Main } from './scenes';\nimport Phaser from 'phaser';\nimport Menu from './scenes/Menu';\nimport { getPreference } from './services/preferences';\n// import * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener('load', () => {\n  let width = getPreference('defaultSize.width');\n  let height = getPreference('defaultSize.height');\n  let perfectRatio = width / height;\n  let innerWidth = window.innerWidth;\n  let innerHeight = window.innerHeight;\n  let actualRatio = Math.min(innerWidth / innerHeight, getPreference('defaultSize.maxRatio'));\n\n  if (perfectRatio > actualRatio) {\n    height = width / actualRatio;\n  } else {\n    width = height * actualRatio;\n  }\n\n  const config = {\n    width: width,\n    height: height,\n    title: 'NINJA IRRESPONSAVEL',\n    // the following 2 values are from `package.json`\n    url: process.env.HOMEPAGE,\n    version: process.env.VERSION,\n    scene: [Boot, Menu, Main],\n    disableContextMenu: true,\n    backgroundColor: 0x132c43,\n    scale: {\n      mode: Phaser.Scale.FIT,\n      autoCenter: Phaser.Scale.CENTER_BOTH,\n      parent: 'game-container',\n      width,\n      height,\n    },\n  };\n\n  new Phaser.Game(config);\n  window.focus();\n});\n"],"sourceRoot":""}